{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Section.js","redux/contacts/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","components/Loader/Loader.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","createReducer","_","payload","state","filter","person","id","error","isLoading","combineReducers","store","configureStore","reducer","contacts","reducers","Section","title","children","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","addContact","name","number","contact","post","contactsAPI","deleteContact","delete","getItems","getFilter","getLoading","loading","getError","filteredContacts","createSelector","lowerCaseFilter","toLowerCase","includes","LoaderSpinner","className","type","color","height","width","timeout","Form","useDispatch","useSelector","contactsSelectors","useState","setName","setNumber","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","find","checkName","checkNumber","test","checkValidNumber","contactsOperations","alert","label","input","onChange","autoComplete","button","Loader","ContactList","useEffect","length","list","map","item","btn","onClick","icon","Filter","contactsActions","target","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f809efd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__M65zN\",\"input\":\"Filter_input__1FplT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__1RBCO\",\"form\":\"Form_form__2o_gZ\",\"label\":\"Form_label__1vg-9\",\"input\":\"Form_input__3IOgM\",\"button\":\"Form_button__2_RMH\"};","import { createAction } from '@reduxjs/toolkit';\nimport {\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_ERROR,\n  FETCH_CONTACT_REQUEST,\n  FETCH_CONTACT_SUCCESS,\n  FETCH_CONTACT_ERROR,\n  DELETE_CONTACT_REQUEST,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_ERROR,\n  FILTER_CONTACT,\n} from './contacts-types';\n\nexport const addContactRequest = createAction(ADD_CONTACT_REQUEST);\nexport const addContactSuccess = createAction(ADD_CONTACT_SUCCESS);\nexport const addContactError = createAction(ADD_CONTACT_ERROR);\n\nexport const fetchContactRequest = createAction(FETCH_CONTACT_REQUEST);\nexport const fetchContactSuccess = createAction(FETCH_CONTACT_SUCCESS);\nexport const fetchContactsError = createAction(FETCH_CONTACT_ERROR);\n\nexport const deleteContactRequest = createAction(DELETE_CONTACT_REQUEST);\nexport const deleteContactSuccess = createAction(DELETE_CONTACT_SUCCESS);\nexport const deleteContactError = createAction(DELETE_CONTACT_ERROR);\n\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const FETCH_CONTACT_REQUEST = 'contacts/fetchContactsRequest';\nexport const FETCH_CONTACT_SUCCESS = 'contacts/fetchContactsSuccess';\nexport const FETCH_CONTACT_ERROR = 'contacts/fetchContactsError';\n\nexport const ADD_CONTACT_REQUEST = 'contacts/addContactRequest';\nexport const ADD_CONTACT_SUCCESS = 'contacts/addContactSuccess';\nexport const ADD_CONTACT_ERROR = 'contacts/addContactError';\n\nexport const DELETE_CONTACT_REQUEST = 'contacts/deleteContactRequest';\nexport const DELETE_CONTACT_SUCCESS = 'contacts/deleteContactSuccess';\nexport const DELETE_CONTACT_ERROR = 'contacts/deleteContactError';\n\nexport const FILTER_CONTACT = 'contacts/filter';\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(person => person.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n  isLoading,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport reducers from './contacts/contacts-reducers';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: reducers,\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      {title && <h1>{title}</h1>}\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport function fetchContacts() {\n  return axios.get('/contacts');\n}\n\nexport function addContact(contact) {\n  return axios.post('/contacts', contact);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n","import {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-action';\n\nimport * as contactsAPI from './contacts-api';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  contactsAPI\n    .fetchContacts()\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => fetchContactsError(error));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n  contactsAPI\n    .addContact(contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest);\n  contactsAPI\n    .deleteContact(id)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => deleteContactError(error));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const filteredContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const lowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(lowerCaseFilter),\n    );\n  },\n);\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nfunction LoaderSpinner() {\n  return (\n    <Loader\n      className=\"Loader App-logo\"\n      type=\"ThreeDots\"\n      color=\"#11BFFF\"\n      height={300}\n      width={300}\n      timeout={3000}\n    />\n  );\n}\n\nexport default LoaderSpinner;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport s from './Form.module.css';\nimport Loader from '../Loader';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getItems);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkName(name)) {\n      alert(`${name} is already in your phonebook, bro!`);\n    } else if (checkNumber(number)) {\n      alert(`${number} is already in your phonebook, bro!`);\n    } else if (checkValidNumber(number)) {\n      alert(`Enter valid number please`);\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      {!isLoading && (\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      )}\n      {isLoading && <Loader />}\n    </form>\n  );\n}\n\nexport default Form;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaRegTimesCircle } from 'react-icons/fa';\nimport s from './ContactList.module.css';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(contactsSelectors.filteredContacts);\n  const contacts = useSelector(contactsSelectors.getItems);\n  const error = useSelector(contactsSelectors.getError);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <ul className={s.list}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <li className={s.item} key={id}>\n              <p className={s.contact}>\n                {name} : {number}\n              </p>\n              <button\n                className={s.btn}\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              >\n                <FaRegTimesCircle className={s.icon} />\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getItems);\n  const error = useSelector(contactsSelectors.getError);\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <label className={s.label}>\n          <p className={s.contacts}>\n            Find contacts by name\n            <input\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </p>\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","import Section from './components/Section';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport s from './components/Form/Form.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1E0Cz\",\"item\":\"ContactList_item__1QWCe\",\"btn\":\"ContactList_btn__2dd9P\",\"icon\":\"ContactList_icon__iASOd\"};"],"sourceRoot":""}